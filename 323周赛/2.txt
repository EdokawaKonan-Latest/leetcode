class Solution {
public:
    int longestSquareStreak(vector<int>& nums) {
        map<int, bool>used;
        map<int, int> c;
        sort(nums.begin(), nums.end());
        nums.erase(unique(nums.begin(), nums.end()), nums.end());
        for(auto k : nums) c[k] = 1;
        int ans = -1;
        int max1 = 1;
        bool ok = false;
        for(auto k1 : nums) {
            //cout << k1 << " ";
            max1 = 1;
            unsigned long long k = k1;
            k = k * k * 1ll;
            if(k > 1e5 + 10) continue;
            while(!used[k] && c[k] == 1) {
                ok = true;
                used[k] = true;
                k = k * k;
                max1 ++;
                if(k > 1e5 + 10) break;
            }
            ans = max(ans, max1);
        }
        if(ok == false) return -1;
        return ans;
    }
};